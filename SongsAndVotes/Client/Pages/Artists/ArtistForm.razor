<EditForm Model="Artist" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Name:</label>
        <div>
            <InputText class="form-control input-text-form" @bind-Value="@Artist.Name" />
            <ValidationMessage For="@(() => Artist.Name)" />
        </div>
    </div>


    <div class="form-group">
        <InputIMG Label="Picture: " OnSelectedImage="PhotoSelected" ImageURL="@imageURL" />
    </div>

    <div class="form-group">
        <div>
            <MudDatePicker Label="Date of birth" @bind-Date="@Artist.DateOfBirth" />
            <ValidationMessage For="@(()=> Artist.DateOfBirth)" />
        </div>
    </div>

    <div class="form-group form-bio">
        <div>
            <MudTextField Class="input-text-form" T="string" Label="Biography" Variant="Variant.Text" Lines="5" @bind-Value="@Artist.Biography" />
            <ValidationMessage For="@(() => Artist.Biography)" />
        </div>
    </div>
    <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Submit" StartIcon="@Icons.Material.Filled.Save" IconColor="Color.Primary" Size="Size.Large">Save changes</MudButton>
</EditForm>

@code {
    [Parameter] public Artist Artist { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private string imageURL;

    protected override void OnParametersSet()
    {
        if (!string.IsNullOrEmpty(Artist.Photo))
        {
            Console.WriteLine(imageURL);
            Console.WriteLine(Artist.Photo);
            imageURL = Artist.Photo;
            Artist.Photo = null;
        }
    }

    private void PhotoSelected(string imageBase64)
    {
        if (!string.IsNullOrEmpty(imageBase64))
        {
            Console.WriteLine(imageBase64);
            Console.WriteLine(imageURL);
            Artist.Photo = imageBase64;
            imageURL = null;
        }
    }
}
