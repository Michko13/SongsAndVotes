<label>@Label</label>
<InputFile id="imageInput" accept=".jpg,.jpeg" OnChange="OnChange" hidden multiple />

<MudButton HtmlTag="label"
           Variant="Variant.Filled"
           Color="Color.Primary"
           StartIcon="@Icons.Filled.Image"
           for="imageInput">
    Upload picture
</MudButton>

@if (imageBase64 != null)
{
    <div style="margin:10px">
        <img src="data:image/jpeg;base64, @imageBase64" style="width: 200px; height: 150px;" />
    </div>
}

@if (ImageURL != null)
{
    <div style="margin:10px">
        <img src="@ImageURL" style="width: 200px; height: 150px;" />
    </div>
}

@if (file != null)
{
    <div style="margin-top: 10px; margin-bottom: 10px">
        <p>@file.Name <code>@file.Size bytes</code></p>
    </div>
}


@code {
    [Parameter] public string Label { get; set; } = "Image";
    [Parameter] public EventCallback<string> OnSelectedImage { get; set; }
    [Parameter] public string ImageURL { get; set; }

    private string imageBase64;
    private IBrowserFile file;

    async Task OnChange(InputFileChangeEventArgs e)
    {
        var imageFiles = e.GetMultipleFiles();
        var buffer = new byte[imageFiles[0].Size];
        await imageFiles[0].OpenReadStream(20971520).ReadAsync(buffer);
        imageBase64 = Convert.ToBase64String(buffer);
        await OnSelectedImage.InvokeAsync(imageBase64);
        file = imageFiles[0];
        Console.WriteLine(ImageURL);
        ImageURL = null;
        StateHasChanged();
    }
}
